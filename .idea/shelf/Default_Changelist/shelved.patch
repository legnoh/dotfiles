Index: etc/macos/install-jetbrains.sh
===================================================================
--- etc/macos/install-jetbrains.sh	(date 1550366467000)
+++ etc/macos/install-jetbrains.sh	(date 1550366467000)
@@ -1,13 +0,0 @@
-#!/usr/bin/expect
-
-set PW [lindex $argv 0]
-set Prompt "\[#$%>\]"
-set timeout 100000000
-
-spawn brew bundle --file=~/code/src/github.com/legnoh/dotfiles/pkg/Brewfile.jetbrains
-expect {
-    "Password:" {
-        send "${PW}\n"
-        exp_continue
-    }
-}
Index: etc/macos/homebridge/com.homebridge.server.plist.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>RunAtLoad</key>\n        <true/>\n    <key>KeepAlive</key>\n        <true/>\n    <key>Label</key>\n        <string>com.homebridge.server</string>\n    <key>ProgramArguments</key>\n        <array>\n             <string>/Users/<%= ENV['USER'] %>/.anyenv/envs/ndenv/shims/homebridge</string>\n             <string>-I</string>\n        </array>\n    <key>StandardOutPath</key>\n        <string>/Users/<%= ENV['USER'] %>/.homebridge/logfile.log</string>\n    <key>StandardErrorPath</key>\n        <string>/Users/<%= ENV['USER'] %>/.homebridge/logfile.log</string>\n    <key>EnvironmentVariables</key>\n        <dict>\n        <key>PATH</key>\n            <string>/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/<%= ENV['USER'] %>/.anyenv/envs/ndenv/shims/</string>\n        <key>HOME</key>\n            <string>/Users/<%= ENV['USER'] %></string>\n        </dict>\n</dict>\n</plist>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- etc/macos/homebridge/com.homebridge.server.plist.erb	(date 1550366467000)
+++ etc/macos/homebridge/com.homebridge.server.plist.erb	(date 1550365688000)
@@ -10,7 +10,7 @@
         <string>com.homebridge.server</string>
     <key>ProgramArguments</key>
         <array>
-             <string>/Users/<%= ENV['USER'] %>/.anyenv/envs/ndenv/shims/homebridge</string>
+             <string>/Users/<%= ENV['USER'] %>/.anyenv/envs/nodenv/shims/homebridge</string>
              <string>-I</string>
         </array>
     <key>StandardOutPath</key>
@@ -20,7 +20,7 @@
     <key>EnvironmentVariables</key>
         <dict>
         <key>PATH</key>
-            <string>/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/<%= ENV['USER'] %>/.anyenv/envs/ndenv/shims/</string>
+            <string>/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/<%= ENV['USER'] %>/.anyenv/envs/nodenv/shims/</string>
         <key>HOME</key>
             <string>/Users/<%= ENV['USER'] %></string>
         </dict>
Index: dot/gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>### https://raw.github.com/github/gitignore/38b189d3b9ea5a14f7177db78d13e2e1cc0e0092/Global/macOS.gitignore\n\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\r\r\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### https://raw.github.com/github/gitignore/38b189d3b9ea5a14f7177db78d13e2e1cc0e0092/Global/Vim.gitignore\n\n# Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\n\n# Temporary\n.netrwhist\n*~\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dot/gitignore	(date 1550366467000)
+++ dot/gitignore	(date 1550366239000)
@@ -1,4 +1,4 @@
-### https://raw.github.com/github/gitignore/38b189d3b9ea5a14f7177db78d13e2e1cc0e0092/Global/macOS.gitignore
+### https://raw.github.com/github/gitignore/d2c1bb2b9c72ead618c9f6a48280ebc7a8e0dff6/Global/macOS.gitignore
 
 # General
 .DS_Store
@@ -29,7 +29,94 @@
 .apdisk
 
 
-### https://raw.github.com/github/gitignore/38b189d3b9ea5a14f7177db78d13e2e1cc0e0092/Global/Vim.gitignore
+### https://raw.github.com/github/gitignore/d2c1bb2b9c72ead618c9f6a48280ebc7a8e0dff6/Global/Linux.gitignore
+
+*~
+
+# temporary files which can be created if a process still has a handle open of a deleted file
+.fuse_hidden*
+
+# KDE directory preferences
+.directory
+
+# Linux trash folder which might appear on any partition or disk
+.Trash-*
+
+# .nfs files are created when an open file is removed but is still being accessed
+.nfs*
+
+
+### https://raw.github.com/github/gitignore/d2c1bb2b9c72ead618c9f6a48280ebc7a8e0dff6/Global/JetBrains.gitignore
+
+# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
+# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839
+
+# User-specific stuff
+.idea/**/workspace.xml
+.idea/**/tasks.xml
+.idea/**/usage.statistics.xml
+.idea/**/dictionaries
+.idea/**/shelf
+
+# Generated files
+.idea/**/contentModel.xml
+
+# Sensitive or high-churn files
+.idea/**/dataSources/
+.idea/**/dataSources.ids
+.idea/**/dataSources.local.xml
+.idea/**/sqlDataSources.xml
+.idea/**/dynamic.xml
+.idea/**/uiDesigner.xml
+.idea/**/dbnavigator.xml
+
+# Gradle
+.idea/**/gradle.xml
+.idea/**/libraries
+
+# Gradle and Maven with auto-import
+# When using Gradle or Maven with auto-import, you should exclude module files,
+# since they will be recreated, and may cause churn.  Uncomment if using
+# auto-import.
+# .idea/modules.xml
+# .idea/*.iml
+# .idea/modules
+
+# CMake
+cmake-build-*/
+
+# Mongo Explorer plugin
+.idea/**/mongoSettings.xml
+
+# File-based project format
+*.iws
+
+# IntelliJ
+out/
+
+# mpeltonen/sbt-idea plugin
+.idea_modules/
+
+# JIRA plugin
+atlassian-ide-plugin.xml
+
+# Cursive Clojure plugin
+.idea/replstate.xml
+
+# Crashlytics plugin (for Android Studio and IntelliJ)
+com_crashlytics_export_strings.xml
+crashlytics.properties
+crashlytics-build.properties
+fabric.properties
+
+# Editor-based Rest Client
+.idea/httpRequests
+
+# Android studio 3.1+ serialized cache file
+.idea/caches/build_file_checksums.ser
+
+
+### https://raw.github.com/github/gitignore/d2c1bb2b9c72ead618c9f6a48280ebc7a8e0dff6/Global/Vim.gitignore
 
 # Swap
 [._]*.s[a-v][a-z]
@@ -48,3 +135,5 @@
 tags
 # Persistent undo
 [._]*.un~
+
+
Index: setup.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/bash\n\nDOT=~/code/src/github.com/legnoh/dotfiles; export DOT\nDOT_GITHUB=\"https://github.com/legnoh/dotfiles.git\"; export DOT_GITHUB\nDOT_TARBAL=\"https://codeload.github.com/legnoh/dotfiles/tar.gz/master\"; export DOT_TARBAL\nDOT_FILES=(\n  gnupg/gpg.conf\n  gnupg/gpg-agent.conf\n  gitconfig\n  gitconfig.optional\n  gitignore\n  vimrc\n  zshrc\n  zshrc.optional\n); export DOT_FILES\n\n# prepare install dotfile\nmkdir -p ~/.gnupg ~/code/bin ~/code/pkg $DOT\n\n# install dotfiles by tarball\ncurl -L \"$DOT_TARBAL\" -o /tmp/dotfiles\ntar zxvf /tmp/dotfiles -C $DOT --strip-components 1\nfor file in ${DOT_FILES[@]}\ndo\n    ln -fs $DOT/dot/$file ~/.$file\ndone\n\n# install muitl os utils & apps\nif [ \"$(uname)\" == 'Darwin' ]; then\n  $DOT/etc/macos/setup.sh\nfi\n\n# re-install dotfiles by https\nrm -rf $DOT\ngit clone $DOT_GITHUB $DOT\n\n# install *env\n/usr/local/bin/anyenv install --init\neval \"$(/usr/local/bin/anyenv init -)\"\n/usr/local/bin/anyenv install jenv\n/usr/local/bin/anyenv install nodenv\n/usr/local/bin/anyenv install phpenv\n/usr/local/bin/anyenv install pyenv\n/usr/local/bin/anyenv install rbenv\n\nexec $SHELL -l\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- setup.sh	(date 1550366467000)
+++ setup.sh	(date 1550365945000)
@@ -8,7 +8,6 @@
   gnupg/gpg-agent.conf
   gitconfig
   gitconfig.optional
-  gitignore
   vimrc
   zshrc
   zshrc.optional
@@ -43,4 +42,5 @@
 /usr/local/bin/anyenv install pyenv
 /usr/local/bin/anyenv install rbenv
 
-exec $SHELL -l
+echo "All process have done! Restart shell and manual setting: "
+echo "https://github.com/legnoh/dotfiles/master/README.md#manual-setting"
Index: pkg/Brewfile.cask
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>tap 'caskroom/fonts'\ntap 'caskroom/versions'\ncask_args appdir: '/Applications'\n\ncask 'adapter'\ncask 'alfred'\ncask 'bettertouchtool'\ncask 'betterzip'\ncask 'cheatsheet'\ncask 'clipy'\ncask 'cyberduck'\ncask 'docker'\ncask 'fly'\ncask 'font-roboto'\ncask 'font-roboto-slab'\ncask 'font-source-han-code-jp'\ncask 'google-chrome'\ncask 'google-cloud-sdk'\ncask 'gpg-suite'\ncask 'jasper'\ncask 'java8'\nbrew 'gradle'\nbrew 'maven'\ncask 'kindle'\ncask 'licecap'\ncask 'minikube'\ncask 'paw'\ncask 'qlcolorcode'\ncask 'qlimagesize'\ncask 'qlmarkdown'\ncask 'qlstephen'\ncask 'quicklook-csv'\ncask 'quicklook-json'\ncask 'slack'\ncask 'suspicious-package'\ncask 'the-unarchiver'\ncask 'vlc'\ncask 'webpquicklook'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pkg/Brewfile.cask	(date 1550366467000)
+++ pkg/Brewfile.cask	(date 1550365945000)
@@ -19,6 +19,7 @@
 cask 'gpg-suite'
 cask 'jasper'
 cask 'java8'
+cask 'jetbrains-toolbox'
 brew 'gradle'
 brew 'maven'
 cask 'kindle'
Index: etc/macos/setup.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># read answers\necho \"Do you need private App? [y/N]: \" && read PRIVATE\necho \"What's your sudo password?: \" && read -sp \"Password: \" PASSWORD\n\n# install command-line-tools\nif [[ ! -d /Library/Developer/CommandLineTools ]]; then\n    echo \"Installing command-line-tools\"\n    xcode-select --install\n    echo \"Completed? [Y/n]: \" && read ANS\n    if [ \"${ANS}\" = \"n\" ]; then\n      echo \"Stoped...\"\n      exit 1;\n    fi\nfi\n\n# install Homebrew, bundle, mas\nif test ! $(which brew); then\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew tap homebrew/bundle\n    brew tap caskroom/cask\nfi\n\n# install brew packages\n~/code/src/github.com/legnoh/dotfiles/etc/macos/install-brew.sh $PASSWORD &\n~/code/src/github.com/legnoh/dotfiles/etc/macos/install-cask.sh $PASSWORD &\n~/code/src/github.com/legnoh/dotfiles/etc/macos/install-jetbrains.sh $PASSWORD &\n~/code/src/github.com/legnoh/dotfiles/etc/macos/install-mas.sh $PASSWORD &\nif [ \"${PRIVATE}\" = \"y\" ]; then\n    ~/code/src/github.com/legnoh/dotfiles/etc/macos/install-private.sh $PASSWORD &\nfi\nwait\n\n# settings\n\n## change shell to zsh\nsudo sh -c 'echo \"¥n/usr/local/bin/zsh\" >> /etc/shells'\nchsh -s /usr/local/bin/zsh\n\n## crontab\ncrontab ~/code/src/github.com/legnoh/dotfiles/pkg/crontab.mac\n\n## CF CLI plugins\ncf install-plugin -r CF-Community -f \"cfdev\"\n\n## BetterTouchTool\nopen -a BetterTouchTool ~/code/src/github.com/legnoh/dotfiles/pkg/Default.bttpreset\n\n## Popclip\ncurl -L http://pilotmoon.com/popclip/extensions/ext/PasteAndMatch.popclipextz -o /tmp/PasteAndMatch.popclipextz\ncurl -L http://pilotmoon.com/popclip/extensions/ext/GoogleTranslate.popclipextz -o /tmp/GoogleTranslate.popclipextz\ncurl -L https://github.com/legnoh/unixtime-jp.popclipext/releases/download/v1.0/unixtime-jp.zip -o /tmp/unixtime-jp.zip\nunzip /tmp/unixtime-jp.zip -d /tmp\necho \"please call it later:\"\necho \"open /tmp/PasteAndMatch.popclipextz\"\necho \"open /tmp/GoogleTranslate.popclipextz\"\necho \"open /tmp/unixtime-jp.popclipext\"\n\n# other gui app setting\nopen \"/Applications/1Password.app\"\nopen \"/Applications/Alfred 3.app\"\nopen \"/Applications/CheatSheet.app\"\nopen \"/Applications/Clipy.app\"\nopen \"/Applications/Docker.app\"\nopen \"/Applications/Google Chrome.app\"\nopen \"/Applications/GPG Keychain.app\"\nopen \"/Applications/Slack.app\"\nopen \"/Applications/The Unarchiver.app\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- etc/macos/setup.sh	(date 1550366467000)
+++ etc/macos/setup.sh	(date 1550366345000)
@@ -1,3 +1,5 @@
+#!/bin/bash
+
 # read answers
 echo "Do you need private App? [y/N]: " && read PRIVATE
 echo "What's your sudo password?: " && read -sp "Password: " PASSWORD
@@ -7,8 +9,8 @@
     echo "Installing command-line-tools"
     xcode-select --install
     echo "Completed? [Y/n]: " && read ANS
-    if [ "${ANS}" = "n" ]; then
-      echo "Stoped..."
+    if [[ "${ANS}" = "n" ]]; then
+      echo "Stopped..."
       exit 1;
     fi
 fi
@@ -21,12 +23,11 @@
 fi
 
 # install brew packages
-~/code/src/github.com/legnoh/dotfiles/etc/macos/install-brew.sh $PASSWORD &
-~/code/src/github.com/legnoh/dotfiles/etc/macos/install-cask.sh $PASSWORD &
-~/code/src/github.com/legnoh/dotfiles/etc/macos/install-jetbrains.sh $PASSWORD &
-~/code/src/github.com/legnoh/dotfiles/etc/macos/install-mas.sh $PASSWORD &
-if [ "${PRIVATE}" = "y" ]; then
-    ~/code/src/github.com/legnoh/dotfiles/etc/macos/install-private.sh $PASSWORD &
+~/code/src/github.com/legnoh/dotfiles/etc/macos/install-brew.sh ${PASSWORD} &
+~/code/src/github.com/legnoh/dotfiles/etc/macos/install-cask.sh ${PASSWORD} &
+~/code/src/github.com/legnoh/dotfiles/etc/macos/install-mas.sh ${PASSWORD} &
+if [[ "${PRIVATE}" = "y" ]]; then
+    ~/code/src/github.com/legnoh/dotfiles/etc/macos/install-private.sh ${PASSWORD} &
 fi
 wait
 
@@ -36,8 +37,9 @@
 sudo sh -c 'echo "¥n/usr/local/bin/zsh" >> /etc/shells'
 chsh -s /usr/local/bin/zsh
 
-## crontab
+## cronjob
 crontab ~/code/src/github.com/legnoh/dotfiles/pkg/crontab.mac
+/usr/local/bin/gibo update && /usr/local/bin/gibo dump macOS Linux JetBrains Vim > ~/.gitignore
 
 ## CF CLI plugins
 cf install-plugin -r CF-Community -f "cfdev"
@@ -45,15 +47,11 @@
 ## BetterTouchTool
 open -a BetterTouchTool ~/code/src/github.com/legnoh/dotfiles/pkg/Default.bttpreset
 
-## Popclip
+## PopClip
 curl -L http://pilotmoon.com/popclip/extensions/ext/PasteAndMatch.popclipextz -o /tmp/PasteAndMatch.popclipextz
 curl -L http://pilotmoon.com/popclip/extensions/ext/GoogleTranslate.popclipextz -o /tmp/GoogleTranslate.popclipextz
 curl -L https://github.com/legnoh/unixtime-jp.popclipext/releases/download/v1.0/unixtime-jp.zip -o /tmp/unixtime-jp.zip
 unzip /tmp/unixtime-jp.zip -d /tmp
-echo "please call it later:"
-echo "open /tmp/PasteAndMatch.popclipextz"
-echo "open /tmp/GoogleTranslate.popclipextz"
-echo "open /tmp/unixtime-jp.popclipext"
 
 # other gui app setting
 open "/Applications/1Password.app"
Index: pkg/crontab.mac
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>57 5 * * * osascript -e \"set volume 60/100*7\"\n\n0 15 * * * /usr/local/bin/brew update && /usr/local/bin/brew cleanup\n0 15 * * * /usr/local/bin/mas upgrade\n0 16 * * * rm -rf /var/mail/$USER\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pkg/crontab.mac	(date 1550366467000)
+++ pkg/crontab.mac	(date 1550365945000)
@@ -1,5 +1,10 @@
+# set volume for alerm
 57 5 * * * osascript -e "set volume 60/100*7"
 
+# daily update homebrew package
 0 15 * * * /usr/local/bin/brew update && /usr/local/bin/brew cleanup
 0 15 * * * /usr/local/bin/mas upgrade
 0 16 * * * rm -rf /var/mail/$USER
+
+# daily update ~/.gitignore
+0 15 * * * /usr/local/bin/gibo update && /usr/local/bin/gibo dump macOS Linux JetBrains Vim > ~/.gitignore
\ No newline at end of file
Index: etc/macos/install-homebridge.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/bash\n\necho \"#### Install nodejs...\"\nndenv install v10.14.2\nndenv global v10.14.2\nndenv rehash\n\necho \"#### Install homebridge...\"\nnpm -g install homebridge --unsafe-perm\nnpm -g install homebridge-itunes\nexec $SHELL -l\n\n# generate config.json and plist\ncp ~/Downloads/mac-bridge.envrc $DOT/etc/macos/homebridge/.envrc\ncd $DOT/etc/macos/homebridge\ndirenv allow\nmkdir -p ~/.homebridge\nerb config.json.erb > ~/.homebridge/config.json\nerb com.homebridge.server.plist.erb > ~/Library/LaunchAgents/com.homebridge.server.plist\n\nchmod 700 ~/Library/LaunchAgents\nchmod 600 ~/Library/LaunchAgents/com.homebridge.server.plist\n\n# load\nlaunchctl load ~/Library/LaunchAgents/com.homebridge.server.plist\nlaunchctl start com.homebridge.server\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- etc/macos/install-homebridge.sh	(date 1550366467000)
+++ etc/macos/install-homebridge.sh	(date 1550366254000)
@@ -1,9 +1,9 @@
 #!/bin/bash
 
 echo "#### Install nodejs..."
-ndenv install v10.14.2
-ndenv global v10.14.2
-ndenv rehash
+nodenv install 10.15.1
+nodenv global 10.15.1
+nodenv rehash
 
 echo "#### Install homebridge..."
 npm -g install homebridge --unsafe-perm
@@ -11,8 +11,8 @@
 exec $SHELL -l
 
 # generate config.json and plist
-cp ~/Downloads/mac-bridge.envrc $DOT/etc/macos/homebridge/.envrc
-cd $DOT/etc/macos/homebridge
+cp ~/Downloads/mac-bridge.envrc ${DOT}/etc/macos/homebridge/.envrc
+cd ${DOT}/etc/macos/homebridge
 direnv allow
 mkdir -p ~/.homebridge
 erb config.json.erb > ~/.homebridge/config.json
@@ -23,4 +23,4 @@
 
 # load
 launchctl load ~/Library/LaunchAgents/com.homebridge.server.plist
-launchctl start com.homebridge.server
+launchctl start com.homebridge.server
\ No newline at end of file
